// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);

    RAM64(in=in, address=address[0..5], load=loada, out=rega);
    RAM64(in=in, address=address[0..5], load=loadb, out=regb);
    RAM64(in=in, address=address[0..5], load=loadc, out=regc);
    RAM64(in=in, address=address[0..5], load=loadd, out=regd);
    RAM64(in=in, address=address[0..5], load=loade, out=rege);
    RAM64(in=in, address=address[0..5], load=loadf, out=regf);
    RAM64(in=in, address=address[0..5], load=loadg, out=regg);
    RAM64(in=in, address=address[0..5], load=loadh, out=regh);

    Mux8Way16(a=rega, b=regb, c=regc, d=regd, e=rege, f=regf, g=regg, h=regh, sel=address[6..8], out=out);

    // Put your code here:
}